#!/bin/bash

# We like colors
red=$(tput setaf 1)
green=$(tput setaf 2)
reset=$(tput sgr0)
yellow=$(tput setaf 3)



mrdocs_update() {
    docker pull quay.io/tiramisu/mr.docs
}

mrdocs() {
	if [[ $@ ]]; then
	    : #Do nothing
	else
	    clear
	    echo "${red}mr.docs - help${reset}"
	    echo "Usage:${green} mrdocs${reset}${yellow} html linkcheck spellcheck${reset}"
	    echo ""
	    echo "${green}mrdocs html${reset}${yellow} => builds html${reset}"
	    echo "${green}mrdocs linkcheck${reset}${yellow} => runs linkcheck${reset}"
	    echo "${green}mrdocs spellcheck${reset}${yellow} => runs spellcheck${reset}"
		echo "${green}mrdocs spellcheck${reset}${yellow} => checks for a new version${reset}"
	    kill -INT $$;
	fi

        if [ -d "docs/_build" ]; then
            rm -rf docs/_build
        fi
		# If command is update, pull new image
		if [ "$1" = "update" ]; then
			echo "${yellow}Pulling update/new version${reset}"
			docker pull quay.io/tiramisu/mr.docs
			kill -INT $$;
		else
			docker run -it --rm -v ${PWD}/docs:/build/docs:rw \
			-u $(id -u):$(id -g) \
            --name docs-tester \
            mr.docs "$1"
		fi
}

_mrdocs() {
    local cur prev opts
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="html linkcheck spellcheck help update"

    COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
}
complete -F _mrdocs mrdocs
